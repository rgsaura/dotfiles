{{ if eq .chezmoi.os "darwin" -}}
# alias local ssh
alias kali="ssh rgsaura@10.211.55.6 -Y"
alias win='ssh rodrigogarcia@10.211.55.4 "powershell"'
PATH=$HOME/.local/share/fig/plugins/git-open:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMwareFusion.app/Contents/Public:/Library/TeX/texbin:/usr/local/share/dotnet:/opt/X11/bin:~/.dotnet/tools:/Library/Apple/usr/bin:/Applications/TopazPhotoAI.app/Contents/Resources/bin:/Applications/Wireshark.app/Contents/MacOS:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:$HOME/.cargo/bin:$HOME/.fig/bin:$HOME/.local/bin:/usr/local/bin:$HOME/.local/share/fig/plugins/git-flow:$HOME/.local/share/fig/plugins/git-extra-commands_unixorn/bin:$HOME/.local/share/fig/plugins/git-extra-commands_unixorn/bin:$HOME/.local/share/fig/plugins/git-flow
# Load Powerlevel9k theme
#source /opt/homebrew/opt/powerlevel9k/powerlevel9k.zsh-theme
# Fig pre block
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
# Fig post block
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
eval "$(gdircolors -b)"

{{- else if eq .chezmoi.os "linux" -}}
PATH=/root/.local/bin:/snap/bin:/usr/sandbox/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/share/games:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
eval "$(dircolors -b)"

{{- end -}}

export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
source ~/powerlevel10k/powerlevel10k.zsh-theme

# Custom Aliases
alias ll='lsd -lh --group-dirs=first'
alias la='lsd -a --group-dirs=first'
alias l='lsd --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias ls='lsd --group-dirs=first'
alias cat='/opt/homebrew/bin/bat --paging=never'
alias catn='cat'
alias catnl='batcat'
alias cl='clear'
alias vim=nvim
alias x=exit
alias t=tmux
alias h=helm
alias k=kubectl
# remote ssh
alias pi="ssh rgsaura@100.79.241.52 -Y"
alias apps-1="ssh rgsaura@100.96.157.116 -Y"
alias apps-2="ssh rgsaura@100.73.69.69 -Y"
alias kali-1="ssh rgsaura@100.120.104.119 -Y"


# Custom keybindings for various keys
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[[3~" delete-char
bindkey "^[[1;3C" forward-word



# Plugins
source ~/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.config/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.config/zsh/zsh-sudo/sudo.plugin.zsh
source ~/.config/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

plugins=(
    you-should-use
	zsh-autosuggestions 
	zsh-syntax-highlighting 
	fast-syntax-highlighting 
	zsh-autocomplete

	# Most Used Plugins
	git                   # Git aliases and enhancements.
	z                    # Quick directory navigation.
	colored-man-pages     # Colorized man pages.
	autojump              # Navigate your filesystem more efficiently.
	history-substring-search  # Search history as you type.

	# Syntax Highlighting & Autocompletion
	zsh-syntax-highlighting  # Syntax highlighting for Zsh commands.
	zsh-autosuggestions      # Autosuggestions based on your history.
	
	# Development & Productivity
	vscode                 # Visual Studio Code integration.
	npm                    # Node.js package management.
	python                 # Python-related aliases and functions.
	docker                 # Docker aliases and functions.
	kubectl                # Kubernetes command-line completions.
	tmux                   # Tmux integration and shortcuts.

	# Utility
	extract                # Simplify extracting compressed files.
	colorize               # Colorizes various types of files.
	web-search             # Perform web searches from the terminal.
	command-not-found      # Suggests corrections for mistyped commands.
	fasd                   # Quick access to files and directories.
	zsh-completions        # Additional completion definitions.

	# File Operations
	copydir                # Easily copy directories.
	dirhistory             # Navigate your directory history with ease.
	alias-tips             # Provides helpful aliases when you mistype a command.
	zsh-navigation-tools   # Advanced tab completion and history navigation.

	# System Administration
	osx                    # OS X-specific aliases and functions.
	brew                   # Homebrew package manager integration.

	# Network & Connectivity
	ssh-agent              # SSH key management.
	autoenv                # Automatically activate virtual environments.

	# Miscellaneous
	auto-notify            # Shows desktop notifications for long-running commands.

)
# History settings
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Set terminal type
export TERM="xterm-256color"

# Fix the Java Problem
export _JAVA_AWT_WM_NONREPARENTING=1

# Enable Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Set up the prompt
autoload -Uz promptinit
promptinit
prompt adam1
setopt histignorealldups sharehistory


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh


# Use modern completion system
autoload -Uz compinit
compinit

# Customize completion behavior
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'



# Functions
function mkt(){
	mkdir {nmap,content,exploits,scripts}
}

# Extract nmap information
function extractPorts(){
	ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
	ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
	echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
	echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
	echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
	echo $ports | tr -d '\n' | xclip -sel clip
	echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
	cat extractPorts.tmp; rm extractPorts.tmp
}

# Settarget

function settarget(){
	if [ $# -eq 1 ]; then
	echo $1 > ~/.config/bin/target
	elif [ $# -gt 2 ]; then
	echo "settarget [IP] [NAME] | settarget [IP]"
	else
	echo $1 $2 > ~/.config/bin/target
	fi
}

# Set 'man' colors
function man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf improvement
function fzf-lovely(){

	if [ "$1" = "h" ]; then
		fzf -m --reverse --preview-window down:20 --preview '[[ $(file --mime {}) =~ binary ]] &&
 	                echo {} is a binary file ||
	                 (bat --style=numbers --color=always {} ||
	                  highlight -O ansi -l {} ||
	                  coderay {} ||
	                  rougify {} ||
	                  cat {}) 2> /dev/null | head -500'

	else
	        fzf -m --preview '[[ $(file --mime {}) =~ binary ]] &&
	                         echo {} is a binary file ||
	                         (bat --style=numbers --color=always {} ||
	                          highlight -O ansi -l {} ||
	                         coderay {} ||
	                          rougify {} ||
	                          cat {}) 2> /dev/null | head -500'
	fi
}

function rmk(){
	scrub -p dod $1
	shred -zun 10 -v $1
}



# Finalize Powerlevel10k instant prompt. Should stay at the bottom of ~/.zshrc.
(( ! ${+functions[p10k-instant-prompt-finalize]} )) || p10k-instant-prompt-finalize 
